<?xml version="1.0" encoding="utf-8"?>
<androidx.coordinatorlayout.widget.CoordinatorLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="true">


    <!--水果标题栏部分-->
    <com.google.android.material.appbar.AppBarLayout
        android:id="@+id/appBar"
        android:layout_width="match_parent"
        android:layout_height="250dp"
        android:background="#3397e4"
        android:fitsSystemWindows="true">

        <!--在AppBarLayout中嵌套一个CollapsingToolbarLayout可折叠标题栏
        android:theme指定了一个@style/ThemeOverlay.AppCompat.Dark.ActionBar的主题
        app:contentScrim属性指定了CollapsingToolbarLayout在趋于折叠状态以及折叠之后
        的背景色，CollapsingToolbarLayout在折叠之后就是一个简单的Toolbar。
        app:layout_scrollFlags属性之前是给Toolbar指定的，现在也移到外面。其中scroll
        表示CollapsingToolbarLayout会随着水果内容详情的滚动一起滚动，exitUntilCollapsed
        表示当CollapsingToolbarLayout随着滚动完成折叠之后就保留在界面上，不再移除屏幕
        -->
        <com.google.android.material.appbar.CollapsingToolbarLayout
            android:id="@+id/collapsing_toolbar"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
            android:fitsSystemWindows="true"
            app:contentScrim="#3397e4"
            app:layout_scrollFlags="scroll|exitUntilCollapsed">



            <ImageView
                android:id="@+id/shop_image_view"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:scaleType="centerCrop"
                android:fitsSystemWindows="true"
                app:layout_collapseMode="parallax"/>

            <androidx.appcompat.widget.Toolbar
                android:id="@+id/toolbar"
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                app:layout_collapseMode="pin"/>
            <!--layout_collapseMode指定当前控件在CollapsingToolbarLayout折叠过程中的折叠模式，Toolbar指定为pin，
            表示在折叠过程中位置始终不变；ImageView指定为parallax，表示在折叠的过程中产生一定的错位偏移，这种模式的视觉效果会非常好-->


        </com.google.android.material.appbar.CollapsingToolbarLayout>
        <!--使用新布局 android:theme属性指定了一个主题，之前在activity_main.xml中给toolbar指定的也是这个主题，现在为了实现
        更高级的Toolbar效果，需要将这个主题的指定提到上一层来；App:contentScrim属性用于指定CollapsingToolbarLayout在趋于折
        叠状态以及折叠之后的背景色；app:layout_scrollFlags属性，scroll表示CollapsingToolbarLayout会随着水果内容详情的滚动
        一起滚动，exitUntilCollapsed表示当CollapsingToolbarLayout随着滚动完成折叠之后就保留在界面上，不再移除屏幕
        -->

    </com.google.android.material.appbar.AppBarLayout><!--水果标题栏部分完成-->


    <!--水果内容详情 使用NestedScrollView，和AppBarLayout平级。NestedScrollView允许使用滚动的方式来查看屏幕以外的数据
    NestedScrollView可以嵌套响应滚动事件的功能；无论是ScrollView还是NestedScrollView，它们的内部都只允许一个直接子布局
    ，因此如果我们想要在里面放入更多东西的话，通常会先嵌套一个LinearLayout，然后再在LinearLayout中放入具体的内容
    -->
    <androidx.core.widget.NestedScrollView
        android:id="@+id/dish_list"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:layout_behavior="@string/appbar_scrolling_view_behavior">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content">

            <androidx.cardview.widget.CardView
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:layout_marginBottom="15dp"
                android:layout_marginLeft="15dp"
                android:layout_marginRight="15dp"
                android:layout_marginTop="35dp"
                app:cardCornerRadius="4dp"><!--layout_marginTop加35dp的边距，是为下面要写的东西留出空间-->

                        <androidx.recyclerview.widget.RecyclerView
                            android:id="@+id/dish_recycler_view"
                            android:layout_width="match_parent"
                            android:layout_height="match_parent"
                            android:fillViewport="true"/>
            </androidx.cardview.widget.CardView>
        </LinearLayout>

        <!--悬浮按钮控件 layout_gravity属性start表示放置位置为从系统语言角度看的开头，本例为右下角
                   app:elevation属性指定一个高度值，高度越大，投影范围越大，但是投影效果越差-->
    </androidx.core.widget.NestedScrollView><!--水果内容详情完成-->

    <!--加入悬浮按钮 app:layout_anchor属性指定一个锚点，将锚点设置为AppbarLayout，这样悬浮按钮就会出现在水果标题栏的区域内
    接着使用app:layout_anchorGravity属性将悬浮按钮定位在标题栏区域的右下角
    -->
    <com.google.android.material.floatingactionbutton.FloatingActionButton
        android:id="@+id/cart"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginRight="50dp"
        android:layout_marginBottom="50dp"
        android:src="@drawable/cart"
        app:layout_anchor="@id/dish_list"
        app:backgroundTint="#61afea"
        app:layout_anchorGravity="bottom|end"/>

</androidx.coordinatorlayout.widget.CoordinatorLayout>